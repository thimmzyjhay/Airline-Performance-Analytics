--Airline Performance Analytics: 
--Insights to Drive Revenue and Reduce Costs


CREATE TABLE Airline_Booking (
	
	num_passengers INT,
	sales_channel VARCHAR(10),
	trip_type VARCHAR(20),
	purchase_lead INT,
	length_of_stay	INT,
	flight_hour	INT,
	flight_day	VARCHAR(10),
	route	VARCHAR(10),
	booking_origin	VARCHAR(20),
	Extra_Baggage	VARCHAR(10),
	Preferred_Seat	VARCHAR(10),
	Flight_meal	VARCHAR(10),
	flight_duration	 NUMERIC,
	Booking_Complete VARCHAR(20)
);

-- Check for NULLs and unusual values
SELECT 
  COUNT(*) AS total_rows,
  COUNT(*) FILTER (WHERE num_passengers IS NULL) AS missing_passengers,
  COUNT(*) FILTER (WHERE purchase_lead < 0) AS invalid_lead,
  COUNT(*) FILTER (WHERE length_of_stay < 0) AS invalid_stay,
  COUNT(*) FILTER (WHERE flight_duration <= 0) AS invalid_duration,
  COUNT(*) FILTER (WHERE booking_complete NOT IN ('Yes', 'No')) AS invalid_booking_status
FROM airline_booking;

-- Add dummy columns for binary features
ALTER TABLE airline_booking
ADD COLUMN extra_baggage_dum INT,
ADD COLUMN preferred_seat_dum INT,
ADD COLUMN flight_meal_dum INT,
ADD COLUMN booking_complete_dum INT;

-- Populate dummy columns using CASE
UPDATE airline_booking
SET extra_baggage_dum = CASE WHEN Extra_Baggage = 'YES' THEN 1 ELSE 0 END,
    preferred_seat_dum = CASE WHEN Preferred_Seat = 'YES' THEN 1 ELSE 0 END,
    flight_meal_dum = CASE WHEN Flight_meal = 'YES' THEN 1 ELSE 0 END,
    booking_complete_dum = CASE WHEN booking_complete = 'CONFIRMED' THEN 1 ELSE 0 END;

--Checking all data
SELECT *
FROM airline_booking

--Total booking per channel
SELECT Count(sales_channel) Total_Booking, sales_channel
FROM airline_booking
Group BY Sales_channel

--Top 10 Sales By Origin
SELECT airline_booking.booking_origin, Count(sales_channel) Booking_Count
FROM airline_booking
	GROUP BY Booking_origin
	ORDER BY Booking_Count DESC
LIMIT 10;

--Complete booking rate by trip type
SELECT trip_type,
  ROUND(AVG(extra_baggage_dum) * 100, 2) AS baggage_rate,
  ROUND(AVG(preferred_seat_dum) * 100, 2) AS seat_rate,
  ROUND(AVG(flight_meal_dum) * 100, 2) AS meal_rate
FROM airline_booking
GROUP BY trip_type;

--Average lenght of stay by trip type
WITH stay_data AS (
  SELECT trip_type, ROUND(AVG(length_of_stay),3) AS avg_stay
  FROM airline_booking
  GROUP BY trip_type
)
SELECT *
	FROM stay_data;

--Average Confirmed booking by channel 
SELECT ROUND(AVG(Flight_Hour),3), sales_channel
FROM airline_booking
	WHERE Booking_Complete IN ('CONFIRMED')
GROUP BY sales_channel;

--Flight hour variability
SELECT STDDEV(flight_hour) flight_variability
FROM airline_booking;

--Median departure time per day
SELECT flight_day, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY flight_hour ASC)
	FROM airline_booking
	GROUP BY flight_day
	;

--Booking Count per flight day
SELECT ab.flight_day,
	COUNT(Booking_Complete) Booking_Count 
		FROM airline_booking ab
		WHERE booking_complete = 'CONFIRMED'
			GROUP BY ab.flight_day
ORDER BY Booking_count DESC;

--Total canceled and Confirmed
SELECT 
	sales_channel,
	COUNT(CASE WHEN Booking_Complete = 'CONFIRMED' THEN 1 END) AS Total_Confirmed,
	COUNT(CASE WHEN Booking_Complete = 'CANCELED' THEN 1 END) AS Total_Canceled
FROM airline_booking
GROUP BY Sales_channel;

--Chcking Purchase_lead
SELECT MIN(purchase_lead),
		MAX(purchase_lead),
		AVG(purchase_lead),
		STDDEV(purchase_lead) 
FROM public.airline_booking	;
	
--Lead segment
SELECT
		CASE
		WHEN purchase_lead <=20 THEN 'Last_minute'
		WHEN purchase_lead <=50 THEN 'Short_term'
		WHEN purchase_lead <=90 THEN 'Mid_term'
		ELSE 'Long_term'
END AS Lead_segment,
	COUNT(*) AS total_bookings,
  	SUM(CASE WHEN booking_complete_dum = 1 THEN 1 ELSE 0 END) AS completed,
  	ROUND(100.0 * SUM(CASE WHEN booking_complete_dum = 1 THEN 1 ELSE 0 END) / COUNT(*), 2) AS completion_rate
FROM airline_booking
GROUP BY lead_segment;

--To check cancellation
SELECT 
	trip_type,
	sales_channel,
	route,
	flight_day,
	extra_baggage,
  preferred_seat,
  flight_meal,
  COUNT(*) AS cancellations
FROM airline_booking
WHERE booking_complete_dum = 0
GROUP BY trip_type, sales_channel, route, flight_day, extra_baggage, preferred_seat, flight_meal
ORDER BY cancellations DESC;
